/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import assessment.Customer;
import assessment.DBhandler;
import assessment.Order;
import assessment.OrderLine;
import assessment.Product;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abelt
 */
public class viewBasket extends javax.swing.JFrame {
    private HashMap<Integer, OrderLine> orders;
    private HashMap<Integer, Product> products;
    public Customer customer;
    public int orderId = 0;
    public boolean loggedIn = false;
    
    public viewBasket()
    {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnCheckout = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblMsg = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstBasket = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Basket");

        lblTotal.setText("Total:");

        btnCheckout.setText("Check Out");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove from Basket");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblMsg.setText("Msg");

        jLabel2.setText("Price:");

        jLabel3.setText("Quantity:");

        lstBasket.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstBasketValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstBasket);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemove)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblTotal)
                                .addComponent(jLabel2))
                            .addComponent(jLabel3))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice)
                            .addComponent(txtQuantity)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(276, 276, 276))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lblMsg)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemove)
                            .addComponent(btnBack)
                            .addComponent(btnCheckout))
                        .addGap(23, 23, 23)
                        .addComponent(lblMsg)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotal)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(89, 89, 89))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed
        if(!loggedIn) 
        {
            try {
                DBhandler db = new DBhandler();
                Order order = new Order();
                JOptionPane jop = new JOptionPane();
                Object[] options = { "Login", "Register" };
                int n = JOptionPane.showOptionDialog(null, "Please log in or register a new account", "Assessment", JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                System.out.println(n);
                switch (n) 
                {
                    case 0:
                        CustomerLogin cl = new CustomerLogin();
                        cl.setVisible(true);
                        cl.passOrder(order);
                        this.dispose();
                        break;    
                    case 1:
                        Registration r = new Registration();
                        r.setVisible(true);
                        this.dispose();
                        break;    
                    default:
                        lblMsg.setText("Please select an option");
                        break;    
                }
            } catch (SQLException ex) {
                Logger.getLogger(viewBasket.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(viewBasket.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else
        {
            try {
                DBhandler db = new DBhandler();
                boolean ordered = db.completeOrder(orders, orderId);
                if(ordered)
                {
                    db.addOrder(customer);
                    lblMsg.setText("Order Succesful!");
                }else
                {
                    lblMsg.setText("Please change quantity and try again!");
                }
            } catch (SQLException ex) {
                Logger.getLogger(viewBasket.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(viewBasket.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnCheckoutActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        try {
            DBhandler db = new DBhandler();
            String basketProduct = lstBasket.getSelectedValue();
            int basketIndex = lstBasket.getSelectedIndex();
            
            txtQuantity.setText("");
            txtPrice.setText("");
            
            for(Map.Entry<Integer, Product> productEntry : products.entrySet())
            {
                Product actualProduct = productEntry.getValue();
                if(actualProduct.getProductName() == basketProduct)
                {
                   for(Map.Entry<Integer, OrderLine> orderEntry : orders.entrySet())
                    {
                        OrderLine orderLine = orderEntry.getValue();
                        if(orderLine.getProductID() == actualProduct.getProductId() && orderLine.getOrderID() == orderId)
                        {
                            boolean removed = db.deleteOrderLine(orderLine.getOrderLineID());
                            db.updateOrderTotal(orderId);
                            if(removed) 
                            {
                                fillBasket();
                                lstBasket.setSelectedIndex(basketIndex);
                            }
                        }
                    }
                }
            }
            if(lstBasket.isSelectionEmpty())
            {
                lblMsg.setText("Please select a product to remove and try again! ");
            }
        } catch (SQLException ex) {
            Logger.getLogger(viewBasket.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(viewBasket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CustomerViewProducts vp = new CustomerViewProducts();
        vp.passUser(loggedIn);
        vp.passCustomer(customer);
        vp.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void lstBasketValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstBasketValueChanged
        DecimalFormat formatter = new DecimalFormat("#0.00");
        for(Map.Entry<Integer, Product> productEntry : products.entrySet())
        {
            Product actualProduct = productEntry.getValue();
            if(actualProduct.getProductName() == lstBasket.getSelectedValue())
            {
                for(Map.Entry<Integer, OrderLine> orderEntry : orders.entrySet())
                {
                    OrderLine orderLine = orderEntry.getValue();
                    if(orderLine.getProductID() == actualProduct.getProductId() && orderLine.getOrderID() == orderId)
                    {
                        txtQuantity.setText(Integer.toString(orderLine.getQuantity()));
                        txtPrice.setText("£" + formatter.format(actualProduct.getPrice()));
                    }
                }
            }
        }
    }//GEN-LAST:event_lstBasketValueChanged
    public void fillBasket() 
    {
        try {
            DBhandler db = new DBhandler();
            DefaultListModel model = new DefaultListModel();
            Order order = new Order();
            double total = 0;
            products = db.loadProduct();
            orders = db.loadOrderLine(order.getOrderId());
            orderId = order.getOrderId();
            
            if(loggedIn)
            {
                order = db.loadOrder(customer.getUserName());
            }
            else
            {
                order = db.loadOrder("temp");
            }
            
            for(Map.Entry<Integer, OrderLine> orderEntry : orders.entrySet())
            {
                    OrderLine orderLine = orderEntry.getValue();
                    if(orderLine.getOrderID() == order.getOrderId())
                    {
                        for(Map.Entry<Integer, Product> productEntry : products.entrySet())
                        {
                            Product product = productEntry.getValue();
                            if(orderLine.getProductID() == product.getProductId())
                            {
                                model.addElement(product.getProductName());
                                total = total + (orderLine.getQuantity() * product.getPrice());
                                
                            }
                        }
                    }
            }
            DecimalFormat formatter = new DecimalFormat("#0.00");
            
            db.updateOrderTotal(orderId);
            txtTotal.setText(formatter.format(total));
            lstBasket.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(viewBasket.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(viewBasket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     public void passUser(boolean loggedIn, Customer customer) 
    {
        this.loggedIn = loggedIn;
        this.customer = customer;
        
        if(!loggedIn) 
        {
            btnCheckout.setText("Please log in to order products");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewBasket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewBasket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewBasket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewBasket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JList<String> lstBasket;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
